// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}


model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role @default(USER)
  email String @unique
  hash String
  firstName String?
  lastName String?
  galleries Gallery[]

  @@map("users")
}

model Gallery {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  createdBy User @relation(fields:[userId], references: [id])

  title String
  description String?
  images Image[]

  @@map("galleries")
}

model Image {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  galleryId Int
  gallery Gallery @relation(fields: [galleryId], references: [id])

  File File[]

  @@map("images")
}

model File {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  docHash String
  mimeType String
  contentSize BigInt
  version Int
  content Bytes
  tags String?
  keywords String?
  
  imageId Int
  image Image @relation(fields: [imageId], references: [id])
  @@map("files")
}